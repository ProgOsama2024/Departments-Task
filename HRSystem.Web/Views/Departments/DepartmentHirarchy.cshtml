@using Microsoft.AspNetCore.Html
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    
}
@model DepartmentHierarchyDto;


@if (Model != null)
{
    <h1>@Model.Title  Department</h1>

    @if (Model.lstDepartmentParents != null && Model.lstDepartmentParents.Count > 0)
    {
        <h2>Parent:</h2>
        <ul>
            @foreach (var child in Model.lstDepartmentParents)
            {
                <li>
                    <a asp-action="DepartmentHirarchy" asp-route-id="@child.Id">@child.Title</a>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No parent departments.</p>
    }

    @if (Model.DepartmentChildren != null)
    {
        <h2>Children:</h2>
        <ul>
                @RenderDepartment(Model.DepartmentChildren)
        </ul>
        @functions {
    int childIndex = 0;
    private IHtmlContent RenderDepartment(ChildDepartmentDto department)
    {
        var listItem = new TagBuilder("li");
        if (childIndex != 0)
        {
            var link = new TagBuilder("a");
            link.Attributes.Add("href", Url.Action("DepartmentHirarchy", "Departments", new { id = department.Id }));
            link.InnerHtml.Append(department.Title);
            listItem.InnerHtml.AppendHtml(link);
        }
        childIndex++;
        if (department.Children.Any())
        {
            var childUl = new TagBuilder("ul");
            foreach (var child in department.Children)
            {
                childUl.InnerHtml.AppendHtml(RenderDepartment(child));
            }
            listItem.InnerHtml.AppendHtml(childUl);
        }
        return listItem;
    }
        }
    }
    else
    {
        <p>No child departments.</p>
    }
}
else
{
    <h1 style="color:red">Invalid department.</h1>
}
